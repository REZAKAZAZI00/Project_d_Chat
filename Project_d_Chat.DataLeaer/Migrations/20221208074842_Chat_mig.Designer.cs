// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_d_Chat.DataLeaer.Context;

#nullable disable

namespace ProjectdChat.DataLeaer.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20221208074842_Chat_mig")]
    partial class Chatmig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project_d_Chat.DataLeaer.Entities.Chat.ChatMassage", b =>
                {
                    b.Property<int>("ChatMassageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatMassageId"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<int?>("ChatRoomChatId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SendAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SerderID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChatMassageId");

                    b.HasIndex("ChatRoomChatId");

                    b.ToTable("ChatMassages");
                });

            modelBuilder.Entity("Project_d_Chat.DataLeaer.Entities.Chat.ChatRoom", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatRooms");
                });

            modelBuilder.Entity("Project_d_Chat.DataLeaer.Entities.User.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNmae")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Project_d_Chat.DataLeaer.Entities.Chat.ChatMassage", b =>
                {
                    b.HasOne("Project_d_Chat.DataLeaer.Entities.Chat.ChatRoom", "ChatRoom")
                        .WithMany("chatMassages")
                        .HasForeignKey("ChatRoomChatId");

                    b.Navigation("ChatRoom");
                });

            modelBuilder.Entity("Project_d_Chat.DataLeaer.Entities.Chat.ChatRoom", b =>
                {
                    b.HasOne("Project_d_Chat.DataLeaer.Entities.User.User", "User")
                        .WithMany("ChatRoom")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_d_Chat.DataLeaer.Entities.Chat.ChatRoom", b =>
                {
                    b.Navigation("chatMassages");
                });

            modelBuilder.Entity("Project_d_Chat.DataLeaer.Entities.User.User", b =>
                {
                    b.Navigation("ChatRoom");
                });
#pragma warning restore 612, 618
        }
    }
}
